<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:artifact="antlib:org.apache.maven.artifact.ant" basedir="." default="build" name="FundTransferJ">
	<path id="maven-ant-tasks.classpath" path="WebContent/WEB-INF/lib/maven-ant-tasks-2.1.3.jar" />
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
           uri="antlib:org.apache.maven.artifact.ant"
           classpathref="maven-ant-tasks.classpath" />
	<!--<path id="maven-ant-tasks.classpath" path="WebContent/WEB-INF/lib/maven-ant-tasks-2.1.3.jar" />
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
       uri="antlib:org.apache.maven.artifact.ant"
       classpathref="maven-ant-tasks.classpath" />-->
    <property environment="env"/>
	<!-- directory-properties -->
    <property name="build.dir" value="." />
    <property name="libs.dir" value="WebContent/WEB-INF/lib" />
     
    <!-- maven-ant-tasks jar -->
    
<property name="mvn.ant.tasks.jar" value="WebContent/WEB-INF/lib/maven-ant-tasks-2.1.3.jar" />
     remote-repo 
   <property name="remote.repo.url" value=" http://artifactorypoc.eu-gb.mybluemix.net/artifactory" />
    <property name="remote.repo.username" value="admin" />
    <property name="remote.repo.password" value="password" />
 
    <!-- including tha maven-ant-tasks-jar into classpath -->
      <property name="src.Dir" value="src"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
	<property name="reports.test" value="testreports" />
	<property name="junit.output.dir" value="testreports"/>
	<property name="test.dir" value="testsrc" />
	     <condition property="ARCHIVE_DIR" value="${env.ARCHIVE_DIR}" else=".">
        <isset property="env.ARCHIVE_DIR" />
    </condition>
	<property name="warname" value= "fundTransferJ.war"/>
    <path id="classpathDir">
        <pathelement location="bin"/>
         <fileset dir="WebContent/WEB-INF/lib"> 
        	<include name="*.jar"/> 
    	</fileset>
    </path>
    
	<property name="artifact.group" value="Unit1" />
	<property name="artifact.name" value="my" />
    <property name="artifact.version" value="2.1.4" />
    <property name="artifact.type" value="war" />
	<property name="artifact.pom" value="pom.xml" />
    
    <target name="init">
        <mkdir dir="bin"/>
	 <mkdir dir="build"/>   
	       </target>
    <target name="clean">
        <delete dir="bin"/>
		<delete file="${ARCHIVE_DIR}/${warname}" />	
	        </target>
    <target name="build" depends="build-project,build-war"/>
    <target name="cleanall" depends="clean"/>
    <target name="build-project" depends="clean,init">
    	<copy todir="${ARCHIVE_DIR}">
	      <fileset file="manifest.yml" />
	    </copy>
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}"
		includeantruntime="false">
            <src path="src"/>
            <src path="testsrc"/>
            <classpath refid="classpathDir"/>
        </javac>
    </target>
 
   <target name="build-war" depends="build-project">
	  <war destfile="build/${warname}" webxml="WebContent/WEB-INF/web.xml">
	  	<webinf dir="WebContent/WEB-INF">
	  		<include name="resources"/>
	    </webinf>
	  	<fileset dir="WebContent">
	  		<include name="**/*"/>
	    </fileset>
	  	<classes dir="bin"/>
	  </war>
   </target>
	<target name="initarti">
                <antcall target="deploy" />   
		<antcall target="cleanpom" />
    </target>
	   
	<target name="deploy" >
      <artifact:pom id="tmp.pom" groupid="${artifact.group}" artifactid="${artifact.name}" version="${artifact.version}" packaging="${artifact.type}" name="${artifact.name}"/>
	      	           <artifact:writepom pomRefId="tmp.pom" file="${artifact.pom}" trim="false"/>
        <artifact:deploy file="fundTransferJ.war">
			            <remoteRepository url="${remote.repo.url}">
                <authentication username="${remote.repo.username}" password="${remote.repo.password}" />
            </remoteRepository>
            <attach file="${build.dir}/.sonar/issues-report/issues-report.html" classifier="sonar" type="html"/>
            <!--<attach file="${build.dir}/${artifact.name}-${artifact.version}-prod.properties" classifier="config-prod" type="properties"/>
            <attach file="${build.dir}/${artifact.name}-${artifact.version}-test.properties" classifier="config-test" type="properties"/>-->
           <pom file="${artifact.pom}" />           
       </artifact:deploy>
    </target>
     
    <!-- clean-task for deletion of an earlier created temporary pom-file-->
	<target name="cleanpom">
        <delete file="${artifact.pom}" />
    </target>
    	
   <target name="unit-test-2" depends="build-project,build-war"> 
	 

	   <junit printsummary="yes" haltonfailure="yes">
	      <classpath>
	        <pathelement location="${project.class.path}"/>
	        <pathelement location="bin"/>
	        <pathelement path="${java.class.path}"/>
	      	<fileset dir="WebContent/WEB-INF/lib"> 
	      	        	<include name="*.jar"/> 
	      	</fileset>
	      	
	      </classpath>
	      
			<formatter type="xml" />

	   	    <batchtest fork="yes" todir="testreports">
	        <fileset dir="${src.Dir}">
	          <include name="**/Test_FirstSuiteRunner.java"/>
	        </fileset>
	      </batchtest>

	    </junit>
	    <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
           <report format="frames" todir="testreports" />
        </junitreport> 
		</target> 
		
	
		
</project>
